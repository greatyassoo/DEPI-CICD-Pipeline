---
# roles/jenkins/tasks/main.yml
- name: Create a directory for the Dockerfile
  ansible.builtin.file:
    path: ./dockerfiles
    state: directory

- name: Create Jenkins Dockerfile
  ansible.builtin.copy:
    dest: ./dockerfiles/Dockerfile  # Ensure the Dockerfile is named correctly
    content: |
      FROM jenkins/jenkins:2.462.2-jdk17
      USER root
      RUN apt-get update && apt-get install -y lsb-release
      RUN curl -fsSLo /usr/share/keyrings/docker-archive-keyring.asc https://download.docker.com/linux/debian/gpg
      RUN sh -c 'echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.asc] https://download.docker.com/linux/debian $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list'
      RUN apt-get update && apt-get install -y docker-ce-cli
      RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
          && unzip awscliv2.zip \
          && ./aws/install \
          && rm -rf awscliv2.zip aws
      USER jenkins
      RUN jenkins-plugin-cli --plugins "blueocean docker-workflow"

- name: Build Jenkins Docker image
  community.docker.docker_image:
    source: build
    build:
      path: ./dockerfiles
    name: myjenkins-blueocean
    tag: 2.462.3-1

- name: Run Docker-in-Docker container for Jenkins
  community.docker.docker_container:
    name: jenkins-docker
    image: docker:dind
    state: started
    restart_policy: no
    privileged: yes
    network_mode: jenkins
    env:
      DOCKER_TLS_CERTDIR: /certs
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
    published_ports:
      - "2376:2376"
    command: "--storage-driver overlay2"

- name: Run Jenkins BlueOcean container
  community.docker.docker_container:
    name: jenkins-blueocean
    image: myjenkins-blueocean:2.462.3-1
    state: started
    restart_policy: on-failure
    network_mode: jenkins
    env:
      DOCKER_HOST: tcp://docker:2376
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: "1"
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
    published_ports:
      - "8080:8080"
      - "50000:50000"