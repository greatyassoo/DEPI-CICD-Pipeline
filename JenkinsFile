pipeline {
    agent any 

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image using the Dockerfile in the current directory
                    docker.build("python_app_image:latest", ".") // Tag as latest
                }
            }
        }

        stage('Push to ECR') {
            steps {
                script {
                    // AWS ECR login
                    sh """
                        aws ecr get-login-password --region ${params.awsRegion} | docker login --username AWS --password-stdin ${params.accountId}.dkr.ecr.${params.awsRegion}.amazonaws.com
                    """

                    // Tag the image as latest
                    sh "docker tag python_app_image:latest ${params.accountId}.dkr.ecr.${params.awsRegion}.amazonaws.com/${params.ecrRepo}:latest"

                    // Push the image to ECR
                    sh "docker push ${params.accountId}.dkr.ecr.${params.awsRegion}.amazonaws.com/${params.ecrRepo}:latest"
                }
            }
        }

        stage('Notify Kuberenetes'){
            steps{
                
            }
        }
    }
}
